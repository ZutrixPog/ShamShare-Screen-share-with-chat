{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10\\\\Documents\\\\Projects\\\\ScreenShare\\\\frontend\\\\src\\\\components\\\\player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'peerjs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './styles/player.css';\nimport { disconnect } from '../redux/slicers/socketSlicer';\nimport liveLogo from '../live.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet peer = null;\nexport default function Player(props) {\n  _s();\n\n  const video = useRef(null);\n  const [io] = useState(useSelector(state => state.socket.value));\n  const [initiate] = useState(new URLSearchParams(props.location.search).get('streamer'));\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const name = useSelector(state => state.name.value);\n  const id = props.match.params.id;\n\n  function getUserMedia() {\n    return navigator.mediaDevices.getDisplayMedia({\n      video: {\n        mediaSource: \"screen\",\n        width: {\n          max: '1920'\n        },\n        height: {\n          max: '1080'\n        },\n        frameRate: {\n          max: '30'\n        }\n      }\n    });\n  }\n\n  function clearVid() {\n    setVisible(true);\n    video.current.removeAttribute('srcObject');\n    video.current.load();\n  } // I know i could use functions here but for whatever reason it didnt work??\n\n\n  useEffect(() => {\n    if (initiate) {\n      peer = new Peer(id);\n      peer.on('open', () => {\n        io.emit('join', {\n          id: id,\n          peerid: id,\n          name: name\n        });\n        getUserMedia().then(stream => {\n          setVisible(false);\n          video.current.srcObject = stream;\n          video.current.play();\n          peer.on('call', call => {\n            console.log('called');\n            call.answer(stream);\n          });\n          io.on('user-connected', ({\n            peerid\n          }) => {\n            peer.call(peerid, stream);\n          });\n\n          stream.oninactive = () => {\n            io.emit('disconnected', id);\n            clearVid();\n          };\n        });\n      });\n    } else {\n      peer = new Peer();\n      peer.connect(id);\n      peer.on('open', () => {\n        peer.on('call', call => {\n          call.answer(new MediaStream());\n          call.on('stream', stream => {\n            video.current.srcObject = stream;\n            video.current.play();\n          });\n        });\n        console.log(peer._id);\n        io.emit('join', {\n          id: id,\n          peerid: peer._id,\n          name: name\n        });\n      });\n      peer.on('error', err => {\n        console.log('error');\n        console.log(err);\n      });\n    }\n\n    io.on('disconnected', () => {\n      clearVid();\n      console.log('disconnected');\n    });\n    return () => {\n      dispatch(disconnect());\n    };\n  }, [id, io, initiate, video, dispatch, name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Salam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"live\",\n        src: liveLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: video,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"inform\",\n      style: {\n        opacity: visible ? 1 : 0\n      },\n      children: \"Please reload to Start Stream!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code\",\n      children: [\"Your Stream Code: \", id, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"copy\",\n        onClick: () => {\n          navigator.clipboard.writeText(id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"rlMHy5f7AXvhhDi9AiYJ61pJwxw=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/10/Documents/Projects/ScreenShare/frontend/src/components/player.js"],"names":["React","useState","useEffect","useRef","Peer","useSelector","useDispatch","disconnect","liveLogo","peer","Player","props","video","io","state","socket","value","initiate","URLSearchParams","location","search","get","visible","setVisible","dispatch","name","id","match","params","getUserMedia","navigator","mediaDevices","getDisplayMedia","mediaSource","width","max","height","frameRate","clearVid","current","removeAttribute","load","on","emit","peerid","then","stream","srcObject","play","call","console","log","answer","oninactive","connect","MediaStream","_id","err","opacity","clipboard","writeText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Peer from 'peerjs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './styles/player.css';\r\nimport { disconnect } from '../redux/slicers/socketSlicer';\r\nimport liveLogo from '../live.png';\r\n\r\nlet peer = null;\r\n\r\nexport default function Player(props) {\r\n    const video = useRef(null);\r\n    const [io] = useState(useSelector((state) => state.socket.value));\r\n    const [initiate] = useState(new URLSearchParams(props.location.search).get('streamer'));\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(state => state.name.value);\r\n    const id = props.match.params.id;\r\n\r\n    function getUserMedia() {\r\n        return navigator.mediaDevices.getDisplayMedia({\r\n                video: {\r\n                  mediaSource: \"screen\",\r\n                  width: { max: '1920' },\r\n                  height: { max: '1080' },\r\n                  frameRate: { max: '30' }\r\n            }\r\n        });\r\n    } \r\n    \r\n    function clearVid() {\r\n        setVisible(true);\r\n        video.current.removeAttribute('srcObject');\r\n        video.current.load();\r\n    }\r\n\r\n    // I know i could use functions here but for whatever reason it didnt work??\r\n    useEffect(() => {\r\n        if (initiate){\r\n            peer = new Peer(id);\r\n            peer.on('open', () => {\r\n                io.emit('join', {id: id, peerid: id, name: name})\r\n                getUserMedia().then(stream => {\r\n                    setVisible(false);\r\n                    video.current.srcObject = stream;\r\n                    video.current.play();\r\n                    peer.on('call', call => {\r\n                        console.log('called')\r\n                        call.answer(stream);\r\n                    });\r\n                    io.on('user-connected', ({peerid}) => {\r\n                        peer.call(peerid, stream);\r\n                    })\r\n                    stream.oninactive = () => {\r\n                        io.emit('disconnected', id);\r\n                        clearVid();\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            peer = new Peer();\r\n            peer.connect(id);\r\n            peer.on('open', () => {\r\n                peer.on('call', call => {\r\n                    call.answer(new MediaStream());\r\n                    call.on('stream', stream => {\r\n                        video.current.srcObject = stream;\r\n                        video.current.play();\r\n                    });\r\n                });\r\n                console.log(peer._id)\r\n                io.emit('join', {id: id, peerid: peer._id, name: name});\r\n            });\r\n            peer.on('error', err => {\r\n                console.log('error')\r\n                console.log(err);\r\n            });\r\n        }\r\n        \r\n        io.on('disconnected', () => {\r\n            clearVid();\r\n            console.log('disconnected')\r\n        });\r\n\r\n        return () => {\r\n            dispatch(disconnect());\r\n        };\r\n\r\n    }, [id, io, initiate, video, dispatch, name]);\r\n    \r\n    return (\r\n        <div class=\"player\">\r\n            <div class=\"title\"><h3>Salam</h3> <img id=\"live\" src={liveLogo}/></div>          \r\n            <video ref={video} autoPlay muted/> \r\n            <h2 id='inform' style={{opacity: visible ? 1 : 0}} >Please reload to Start Stream!</h2> \r\n            <div className='code'>Your Stream Code: {id} <button id=\"copy\" onClick={() => { navigator.clipboard.writeText(id) }}/></div>    \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}