{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10\\\\Documents\\\\Projects\\\\ScreenShare\\\\frontend\\\\screen-share\\\\src\\\\components\\\\player.js\";\nimport { Component } from 'react';\nimport './styles/player.css';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stunServerConfig = {\n  iceServers: [{\n    url: 'turn:13.250.13.83:3478?transport=udp',\n    username: \"YzYNCouZM1mhqhmseWk6\",\n    credential: \"YzYNCouZM1mhqhmseWk6\"\n  }]\n};\nexport default class Player extends Component {\n  constructor() {\n    this.io = io(`https://localhost:8000`);\n    this.state = {\n      initiate: false\n    };\n  }\n\n  handleMedia(stream) {\n    if (this.state.initiate) {\n      let peer = new Peer({\n        initiate: this.state.initiate,\n        stream: stream,\n        config: stunServerConfig\n      });\n    } else {\n      let peer = new Peer({\n        config: stunServerConfig\n      });\n    }\n\n    peer.on('signal', data => {\n      this.io.emit('offer', Json.stringify(data));\n    });\n    this.io.on('offer', data => {\n      peer.signal(Json.parse(data));\n    });\n    peer.on('stream', stream => {\n      this.src = stream;\n    });\n  }\n\n  startStream() {\n    if (this.state.initiate) {\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          mediaSource: \"screen\",\n          width: {\n            max: '1920'\n          },\n          height: {\n            max: '1080'\n          },\n          frameRate: {\n            max: '10'\n          }\n        }\n      }).then(handleMedia).catch(err => {\n        throw err;\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      initiate: true\n    });\n    this.io.emit('start');\n    io.on('start', () => {\n      startStream();\n    });\n  }\n\n  componentWillUnmount() {\n    this.io.emit('start');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Salam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"live.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        ref: vid => {\n          vid.srcObject = this.src;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/10/Documents/Projects/ScreenShare/frontend/screen-share/src/components/player.js"],"names":["Component","io","Peer","stunServerConfig","iceServers","url","username","credential","Player","constructor","state","initiate","handleMedia","stream","peer","config","on","data","emit","Json","stringify","signal","parse","src","startStream","navigator","mediaDevices","getUserMedia","video","mediaSource","width","max","height","frameRate","then","catch","err","componentDidMount","setState","componentWillUnmount","render","vid","srcObject"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport './styles/player.css';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst stunServerConfig = {\r\n    iceServers: [{\r\n      url: 'turn:13.250.13.83:3478?transport=udp',\r\n      username: \"YzYNCouZM1mhqhmseWk6\",\r\n      credential: \"YzYNCouZM1mhqhmseWk6\"\r\n    }]\r\n};\r\n\r\nexport default class Player extends Component {\r\n    constructor(){\r\n        this.io = io(`https://localhost:8000`);\r\n        this.state = {initiate: false};\r\n    }\r\n\r\n    handleMedia(stream) {\r\n        if(this.state.initiate){\r\n            let peer = new Peer({initiate: this.state.initiate, stream: stream, config: stunServerConfig});\r\n        } else {\r\n            let peer = new Peer({config: stunServerConfig});\r\n        }\r\n\r\n        peer.on('signal', data => {\r\n            this.io.emit('offer', Json.stringify(data));\r\n        });\r\n\r\n        this.io.on('offer', data => {\r\n            peer.signal(Json.parse(data));\r\n        });\r\n\r\n        peer.on('stream', stream => {\r\n            this.src = stream;\r\n        })\r\n    }\r\n\r\n    startStream() {\r\n        if(this.state.initiate){\r\n            navigator.mediaDevices.getUserMedia({\r\n                video: {\r\n                  mediaSource: \"screen\",\r\n                  width: { max: '1920' },\r\n                  height: { max: '1080' },\r\n                  frameRate: { max: '10' }\r\n                }\r\n              }).then(handleMedia)\r\n              .catch(err => {throw err});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({initiate: true});\r\n        this.io.emit('start');\r\n        io.on('start', () => {\r\n            startStream();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.io.emit('start');\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div class=\"player\">\r\n                <div class=\"title\"><h3>Salam</h3> <img src=\"live.png\"/></div>\r\n                <video autoPlay ref={vid => { vid.srcObject = this.src }}/>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}