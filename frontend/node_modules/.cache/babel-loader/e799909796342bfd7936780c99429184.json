{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10\\\\Documents\\\\Projects\\\\ScreenShare\\\\frontend\\\\screen-share\\\\src\\\\components\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from 'react-modal';\nimport Player from './player';\nimport Chat from './chat';\nimport { setName } from '../redux/slicers/nameSlicer';\nimport { findNonSerializableValue } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport default function Main(props) {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = useState();\n  const dispatch = useDispatch();\n  const [initiate] = useState(new URLSearchParams(props.location.search).get('streamer'));\n\n  function openModal() {\n    setVisible(true);\n  }\n\n  function closeModal() {\n    setVisible(false);\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n\n    if (!value) {\n      return alert('Esmet Chie??');\n    }\n\n    dispatch(setName(value));\n    closeModal();\n  }\n\n  useEffect(() => {\n    if (!initiate) {\n      openModal();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Player, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chat, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"oq+WXU40orILx2xFmgUn9NM4fZo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/10/Documents/Projects/ScreenShare/frontend/screen-share/src/components/main.js"],"names":["React","useState","useEffect","useDispatch","Modal","Player","Chat","setName","findNonSerializableValue","setAppElement","Main","props","visible","setVisible","value","setValue","dispatch","initiate","URLSearchParams","location","search","get","openModal","closeModal","handleClick","e","preventDefault","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,wBAAT,QAAyC,kBAAzC;;;AAEAJ,KAAK,CAACK,aAAN,CAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,QAAD,IAAahB,QAAQ,CAAC,IAAIiB,eAAJ,CAAoBP,KAAK,CAACQ,QAAN,CAAeC,MAAnC,EAA2CC,GAA3C,CAA+C,UAA/C,CAAD,CAA3B;;AAEA,WAASC,SAAT,GAAqB;AACjBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAASU,UAAT,GAAsB;AAClBV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,WAASW,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACZ,KAAL,EAAY;AACR,aAAOa,KAAK,CAAC,cAAD,CAAZ;AACH;;AACDX,IAAAA,QAAQ,CAACT,OAAO,CAACO,KAAD,CAAR,CAAR;AACAS,IAAAA,UAAU;AACb;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACe,QAAL,EAAc;AACVK,MAAAA,SAAS;AACZ;AACJ,GAJQ,CAAT;AAMA,sBACI;AAAA,4BACI,QAAC,MAAD,OAAYX;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH;;GAnCuBD,I;UAGHP,W;;;KAHGO,I","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport Player from './player';\r\nimport Chat from './chat';\r\nimport { setName } from '../redux/slicers/nameSlicer';\r\nimport { findNonSerializableValue } from '@reduxjs/toolkit';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function Main(props) {\r\n    const [visible, setVisible] = useState(false);\r\n    const [value, setValue] = useState();\r\n    const dispatch = useDispatch();\r\n    const [initiate] = useState(new URLSearchParams(props.location.search).get('streamer'));\r\n\r\n    function openModal() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function closeModal() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        if (!value) {\r\n            return alert('Esmet Chie??');\r\n        }\r\n        dispatch(setName(value));\r\n        closeModal();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!initiate){\r\n            openModal();\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <Player {...props} />\r\n            <Chat {...props} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}