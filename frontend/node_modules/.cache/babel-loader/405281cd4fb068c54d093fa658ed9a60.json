{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10\\\\Documents\\\\Projects\\\\ScreenShare\\\\frontend\\\\screen-share\\\\src\\\\components\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat(props) {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [io] = useState(useSelector(state => state.socket.value));\n  const textarea = useRef(null);\n  useEffect(() => {\n    io.on('message-received', msg => {\n      setMessages([...messages, msg]);\n    });\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const msg = textarea.current.value;\n    setMessages([...messages, msg]);\n    io.emit('message', msg);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-title\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-body\",\n      children: messages.map(value => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          class: \"bubble you\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"message-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        class: \"message-input\",\n        ref: textarea,\n        placeholder: \"Type message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"message-submit\",\n        onSubmit: handleSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"xizsyvS53Nr7YFzAwD35QLi8hTc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/10/Documents/Projects/ScreenShare/frontend/screen-share/src/components/chat.js"],"names":["useRef","useState","useEffect","useSelector","Chat","props","messages","setMessages","io","state","socket","value","textarea","on","msg","handleSubmit","e","preventDefault","current","emit","map"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,EAAD,IAAOP,QAAQ,CAACE,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAZ,CAArB;AACA,QAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,EAAE,CAACK,EAAH,CAAM,kBAAN,EAA0BC,GAAG,IAAI;AAC7BP,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,GAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,CAAT;;AAMA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMH,GAAG,GAAGF,QAAQ,CAACM,OAAT,CAAiBP,KAA7B;AACAJ,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,GAAd,CAAD,CAAX;AACAN,IAAAA,EAAE,CAACW,IAAH,CAAQ,SAAR,EAAmBL,GAAnB;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,gBACER,QAAQ,CAACc,GAAT,CAAaT,KAAK,IAAI;AACpB;AAAA;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,oBACMA;AADN;AAAA;AAAA;AAAA;AAAA;AAGH,OAJC;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,8BACI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,eAA5B;AAA4C,QAAA,GAAG,EAAEC,QAAjD;AAA2D,QAAA,WAAW,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,gBAA5B;AAA6C,QAAA,QAAQ,EAAEG,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlCuBX,I;UAEED,W;;;KAFFC,I","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './styles/chat.css';\r\n\r\nexport default function Chat(props) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [io] = useState(useSelector((state) => state.socket.value));\r\n    const textarea = useRef(null);\r\n\r\n    useEffect(() => {\r\n        io.on('message-received', msg => {\r\n            setMessages([...messages, msg]);\r\n        });\r\n    });\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const msg = textarea.current.value;\r\n        setMessages([...messages, msg]);\r\n        io.emit('message', msg);\r\n    }\r\n\r\n    return (\r\n        <div class=\"chat\">\r\n            <div class=\"chat-title\">Chat</div>\r\n            <div class=\"chat-body\">\r\n            { messages.map(value => {\r\n                <div class=\"bubble you\">\r\n                    { value }\r\n                </div>\r\n            })}\r\n            </div>\r\n            <div class=\"message-box\">\r\n                <textarea type=\"text\" class=\"message-input\" ref={textarea} placeholder=\"Type message...\"></textarea>\r\n                <button type=\"submit\" class=\"message-submit\" onSubmit={handleSubmit}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}