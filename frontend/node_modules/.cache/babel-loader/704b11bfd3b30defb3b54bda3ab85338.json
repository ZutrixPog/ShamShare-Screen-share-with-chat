{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10\\\\Documents\\\\Projects\\\\ScreenShare\\\\frontend\\\\screen-share\\\\src\\\\components\\\\chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setName } from '../redux/slicers/nameSlicer';\nimport './styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat(props) {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [io] = useState(useSelector(state => state.socket.value));\n  const [value, setValue] = useState(null);\n  const name = useSelector(state => state.name.value);\n  const chat = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    io.on('message-received', msg => {\n      setMessages([...messages, msg]);\n    });\n    io.on('user-connected', ({\n      name\n    }) => {\n      chat.current.innerHTML += `<span>${name} connected!</span>`;\n    });\n  });\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = props.match.params.id;\n    setMessages([...messages, value]);\n    io.emit('message', {\n      id: id,\n      msg: value\n    });\n    console.log(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-title\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-body\",\n      ref: chat,\n      children: messages.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bubble you\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"message-box\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        class: \"message-input\",\n        onChange: handleChange,\n        placeholder: \"Type message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"message-submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"nu6GJfRdki4OqpfniqdlUfO/uQI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Chat;\n\nfunction NameDialog(props) {\n  _s2();\n\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n\n  function handleClick(e) {\n    if (!value) {\n      return alert('Bache esmet Chie??');\n    }\n\n    dialog.close(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      class: \"name-input\",\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      placeholder: \"Esmet Chie?...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Berim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(NameDialog, \"8R8zlVIs2RDNs0hlzr+5fCdSTaE=\", true);\n\n_c2 = NameDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"NameDialog\");","map":{"version":3,"sources":["C:/Users/10/Documents/Projects/ScreenShare/frontend/screen-share/src/components/chat.js"],"names":["useState","useEffect","useRef","useSelector","useDispatch","setName","Chat","props","messages","setMessages","io","state","socket","value","setValue","name","chat","dispatch","on","msg","current","innerHTML","handleChange","e","target","handleSubmit","preventDefault","id","match","params","emit","console","log","map","NameDialog","dialog","useDialog","handleClick","alert","close"],"mappings":";;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,EAAD,IAAOV,QAAQ,CAACG,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAZ,CAArB;AACA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMe,IAAI,GAAGZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWF,KAAvB,CAAxB;AACA,QAAMG,IAAI,GAAGd,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAY;AAClBS,IAAAA,EAAE,CAACQ,EAAH,CAAM,kBAAN,EAA0BC,GAAG,IAAI;AAC7BV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,GAAd,CAAD,CAAX;AACH,KAFD;AAIAT,IAAAA,EAAE,CAACQ,EAAH,CAAM,gBAAN,EAAwB,CAAC;AAACH,MAAAA;AAAD,KAAD,KAAY;AAChCC,MAAAA,IAAI,CAACI,OAAL,CAAaC,SAAb,IAA2B,SAAQN,IAAK,oBAAxC;AACH,KAFD;AAGH,GARQ,CAAT;;AAUA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACrBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASX,KAAV,CAAR;AACH;;AAED,WAASY,YAAT,CAAsBF,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACG,cAAF;AACA,UAAMC,EAAE,GAAGpB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACAlB,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,KAAd,CAAD,CAAX;AACAH,IAAAA,EAAE,CAACoB,IAAH,CAAQ,SAAR,EAAmB;AAACH,MAAAA,EAAE,EAAEA,EAAL;AAASR,MAAAA,GAAG,EAAEN;AAAd,KAAnB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,GAAG,EAAEG,IAA5B;AAAA,gBACER,QAAQ,CAACyB,GAAT,CAAapB,KAAK,iBAChB;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACI;AAAA,qBAAOE,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAC2BF,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAM,MAAA,KAAK,EAAC,aAAZ;AAA0B,MAAA,QAAQ,EAAEY,YAApC;AAAA,8BACI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,eAA5B;AAA4C,QAAA,QAAQ,EAAEH,YAAtD;AAAoE,QAAA,WAAW,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA9CuBhB,I;UAEEH,W,EAETA,W,EAEIC,W;;;KANGE,I;;AAgDxB,SAAS4B,UAAT,CAAoB3B,KAApB,EAA2B;AAAA;;AACvB,QAAM4B,MAAM,GAAGC,SAAS,EAAxB;AACA,QAAM,CAACvB,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;;AAEA,WAASqC,WAAT,CAAqBd,CAArB,EAAwB;AACpB,QAAG,CAACV,KAAJ,EAAU;AACN,aAAOyB,KAAK,CAAC,oBAAD,CAAZ;AACH;;AACDH,IAAAA,MAAM,CAACI,KAAP,CAAa1B,KAAb;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAyC,MAAA,QAAQ,EAAGU,CAAD,IAAO;AAAET,QAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASX,KAAV,CAAR;AAA0B,OAAtF;AAAwF,MAAA,WAAW,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEwB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAlBQH,U;;MAAAA,U","sourcesContent":["import {useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setName } from '../redux/slicers/nameSlicer';\r\nimport './styles/chat.css';\r\n\r\nexport default function Chat(props) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [io] = useState(useSelector((state) => state.socket.value));\r\n    const [value, setValue] = useState(null);\r\n    const name = useSelector((state) => state.name.value);\r\n    const chat = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n        io.on('message-received', msg => {\r\n            setMessages([...messages, msg]);\r\n        });\r\n\r\n        io.on('user-connected', ({name}) => {\r\n            chat.current.innerHTML += `<span>${name} connected!</span>`\r\n        });\r\n    });\r\n\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const id = props.match.params.id;\r\n        setMessages([...messages, value]);\r\n        io.emit('message', {id: id, msg: value});\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n        <div class=\"chat\">\r\n            <div class=\"chat-title\">Chat</div>\r\n            <div class=\"chat-body\" ref={chat}>\r\n            { messages.map(value => \r\n                <div class=\"bubble you\">\r\n                    <span>{name}: </span>{ value }\r\n                </div>\r\n            )}\r\n            </div>\r\n            <form class=\"message-box\" onSubmit={handleSubmit}>\r\n                <textarea type=\"text\" class=\"message-input\" onChange={handleChange} placeholder=\"Type message...\"></textarea>\r\n                <button type=\"submit\" class=\"message-submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NameDialog(props) {\r\n    const dialog = useDialog();\r\n    const [value, setValue] = useState();\r\n\r\n    function handleClick(e) {\r\n        if(!value){\r\n            return alert('Bache esmet Chie??');\r\n        }\r\n        dialog.close(value);\r\n    }\r\n\r\n    return (\r\n        <div class=\"home\">\r\n            <h1>Enter your name</h1>\r\n            <textarea type=\"text\" class=\"name-input\" onChange={(e) => { setValue(e.target.value) }} placeholder=\"Esmet Chie?...\"></textarea>\r\n            <button onClick={handleClick}>Berim</button>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}